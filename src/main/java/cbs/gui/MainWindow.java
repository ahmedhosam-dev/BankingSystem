/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cbs.gui;

import java.sql.SQLException;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import cbs.Account;
import cbs.Transaction;
import cbs.db.AccountOperation;
import cbs.db.CustomerOperation;
import cbs.db.TransactionOperation;

/**
 *
 * @author Ahmed
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainWindowPanel = new javax.swing.JPanel();
        NavPanel = new javax.swing.JPanel();
        __LOGOANDNAME = new javax.swing.JPanel();
        __BLOGO = new javax.swing.JLabel();
        __SLOGO = new javax.swing.JLabel();
        __SLASH = new javax.swing.JLabel();
        WELCOMEMESSAGE = new javax.swing.JLabel();
        SEARCHTextField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        __ACCOUNT_INFOPanel = new javax.swing.JPanel();
        __ACCOUNTIDLabel = new javax.swing.JLabel();
        ACCOUNT_ID_TextField = new javax.swing.JTextField();
        __CUSTOMERIDLabel = new javax.swing.JLabel();
        CUSTOMER_ID_TextField = new javax.swing.JTextField();
        STATUS_TextField = new javax.swing.JTextField();
        __BALANCELabel = new javax.swing.JLabel();
        BALANCETextField = new javax.swing.JTextField();
        __STATUSLabel = new javax.swing.JLabel();
        __CREATED_AT_Label = new javax.swing.JLabel();
        TRANSFER_Button = new javax.swing.JButton();
        WITHDRAW_Button = new javax.swing.JButton();
        CREATED_AT_TextField = new javax.swing.JTextField();
        DEPOSIT_Button = new javax.swing.JButton();
        UPDATED_AT_TextField = new javax.swing.JTextField();
        __UPDATED_AT_Label = new javax.swing.JLabel();
        AMOUNT_TextField = new javax.swing.JTextField();
        __AMOUNTLabel = new javax.swing.JLabel();
        TO_TextField = new javax.swing.JTextField();
        __TOLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TRANSACTIONTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainWindowPanel.setBackground(new java.awt.Color(245, 247, 248));
        MainWindowPanel.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        MainWindowPanel.setPreferredSize(new java.awt.Dimension(800, 500));
        MainWindowPanel.setLayout(null);

        NavPanel.setBackground(new java.awt.Color(243, 243, 243));

        __LOGOANDNAME.setBackground(new java.awt.Color(243, 243, 243));

        __BLOGO.setFont(new java.awt.Font("Okruglizm", 0, 24)); // NOI18N
        __BLOGO.setForeground(new java.awt.Color(1, 240, 164));
        __BLOGO.setText("B");

        __SLOGO.setFont(new java.awt.Font("Okruglizm", 0, 24)); // NOI18N
        __SLOGO.setForeground(new java.awt.Color(34, 40, 49));
        __SLOGO.setText("S");

        __SLASH.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        __SLASH.setForeground(new java.awt.Color(34, 40, 49));
        __SLASH.setText("|");

        WELCOMEMESSAGE.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        WELCOMEMESSAGE.setForeground(new java.awt.Color(34, 40, 49));
        WELCOMEMESSAGE.setText("Welcome Mr. Mohamed");

        javax.swing.GroupLayout __LOGOANDNAMELayout = new javax.swing.GroupLayout(__LOGOANDNAME);
        __LOGOANDNAME.setLayout(__LOGOANDNAMELayout);
        __LOGOANDNAMELayout.setHorizontalGroup(
            __LOGOANDNAMELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(__LOGOANDNAMELayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(__BLOGO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(__SLOGO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(__SLASH)
                .addGap(12, 12, 12)
                .addComponent(WELCOMEMESSAGE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        __LOGOANDNAMELayout.setVerticalGroup(
            __LOGOANDNAMELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(__LOGOANDNAMELayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(__LOGOANDNAMELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(__SLASH, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WELCOMEMESSAGE)
                    .addComponent(__SLOGO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(__BLOGO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout NavPanelLayout = new javax.swing.GroupLayout(NavPanel);
        NavPanel.setLayout(NavPanelLayout);
        NavPanelLayout.setHorizontalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavPanelLayout.createSequentialGroup()
                .addComponent(__LOGOANDNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 520, Short.MAX_VALUE))
        );
        NavPanelLayout.setVerticalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(__LOGOANDNAME, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainWindowPanel.add(NavPanel);
        NavPanel.setBounds(0, 0, 800, 50);

        SEARCHTextField.setBackground(new java.awt.Color(255, 255, 255));
        SEARCHTextField.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        SEARCHTextField.setForeground(new java.awt.Color(34, 40, 49));
        SEARCHTextField.setToolTipText("");
        SEARCHTextField.setBorder(null);
        MainWindowPanel.add(SEARCHTextField);
        SEARCHTextField.setBounds(250, 60, 230, 30);

        SearchButton.setBackground(new java.awt.Color(244, 206, 20));
        SearchButton.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(34, 40, 49));
        SearchButton.setText("Search");
        SearchButton.setBorder(null);
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    SearchButtonActionPerformed(evt);
                } catch (SQLException e) {
                    System.out.println("SQL Error: " + e);
                }
            }
        });
        MainWindowPanel.add(SearchButton);
        SearchButton.setBounds(490, 60, 79, 30);

        __ACCOUNT_INFOPanel.setBackground(new java.awt.Color(245, 247, 248));

        __ACCOUNTIDLabel.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        __ACCOUNTIDLabel.setForeground(new java.awt.Color(34, 40, 49));
        __ACCOUNTIDLabel.setText("Account (ID):");

        ACCOUNT_ID_TextField.setEditable(false);
        ACCOUNT_ID_TextField.setBackground(new java.awt.Color(255, 255, 255));
        ACCOUNT_ID_TextField.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        ACCOUNT_ID_TextField.setForeground(new java.awt.Color(34, 40, 49));

        __CUSTOMERIDLabel.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        __CUSTOMERIDLabel.setForeground(new java.awt.Color(34, 40, 49));
        __CUSTOMERIDLabel.setText("Customer:");

        CUSTOMER_ID_TextField.setEditable(false);
        CUSTOMER_ID_TextField.setBackground(new java.awt.Color(255, 255, 255));
        CUSTOMER_ID_TextField.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        CUSTOMER_ID_TextField.setForeground(new java.awt.Color(34, 40, 49));

        STATUS_TextField.setEditable(false);
        STATUS_TextField.setBackground(new java.awt.Color(255, 255, 255));
        STATUS_TextField.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        STATUS_TextField.setForeground(new java.awt.Color(34, 40, 49));

        __BALANCELabel.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        __BALANCELabel.setForeground(new java.awt.Color(34, 40, 49));
        __BALANCELabel.setText("Balance:");

        BALANCETextField.setEditable(false);
        BALANCETextField.setBackground(new java.awt.Color(255, 255, 255));
        BALANCETextField.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        BALANCETextField.setForeground(new java.awt.Color(34, 40, 49));

        __STATUSLabel.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        __STATUSLabel.setForeground(new java.awt.Color(34, 40, 49));
        __STATUSLabel.setText("Status:");

        __CREATED_AT_Label.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        __CREATED_AT_Label.setForeground(new java.awt.Color(34, 40, 49));
        __CREATED_AT_Label.setText("Created at:");

        TRANSFER_Button.setBackground(new java.awt.Color(255, 59, 63));
        TRANSFER_Button.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        TRANSFER_Button.setForeground(new java.awt.Color(34, 40, 49));
        TRANSFER_Button.setText("Transfer");
        TRANSFER_Button.setBorder(null);
        TRANSFER_Button.setPreferredSize(new java.awt.Dimension(100, 50));
        TRANSFER_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    TRANSFER_ButtonActionPerformed(evt);
                } catch (SQLException e) {
                    System.out.println("SQL Error: " + e);
                }
            }
        });

        WITHDRAW_Button.setBackground(new java.awt.Color(244, 206, 20));
        WITHDRAW_Button.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        WITHDRAW_Button.setForeground(new java.awt.Color(34, 40, 49));
        WITHDRAW_Button.setText("Withdraw");
        WITHDRAW_Button.setBorder(null);
        WITHDRAW_Button.setMaximumSize(new java.awt.Dimension(50, 15));
        WITHDRAW_Button.setMinimumSize(new java.awt.Dimension(50, 15));
        WITHDRAW_Button.setPreferredSize(new java.awt.Dimension(100, 50));
        WITHDRAW_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    WITHDRAW_ButtonActionPerformed(evt);
                } catch (SQLException e) {
                    System.out.println("SQL Error: " + e);
                }
            }
        });

        CREATED_AT_TextField.setEditable(false);
        CREATED_AT_TextField.setBackground(new java.awt.Color(255, 255, 255));
        CREATED_AT_TextField.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        CREATED_AT_TextField.setForeground(new java.awt.Color(34, 40, 49));

        DEPOSIT_Button.setBackground(new java.awt.Color(59, 209, 63));
        DEPOSIT_Button.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        DEPOSIT_Button.setForeground(new java.awt.Color(34, 40, 49));
        DEPOSIT_Button.setText("Deposit");
        DEPOSIT_Button.setBorder(null);
        DEPOSIT_Button.setMaximumSize(new java.awt.Dimension(50, 15));
        DEPOSIT_Button.setMinimumSize(new java.awt.Dimension(50, 15));
        DEPOSIT_Button.setPreferredSize(new java.awt.Dimension(100, 50));
        DEPOSIT_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    DEPOSIT_ButtonActionPerformed(evt);
                } catch (SQLException e) {
                    System.out.println("SQL Error: " + e);
                }
            }
        });

        UPDATED_AT_TextField.setEditable(false);
        UPDATED_AT_TextField.setBackground(new java.awt.Color(255, 255, 255));
        UPDATED_AT_TextField.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        UPDATED_AT_TextField.setForeground(new java.awt.Color(34, 40, 49));

        __UPDATED_AT_Label.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        __UPDATED_AT_Label.setForeground(new java.awt.Color(34, 40, 49));
        __UPDATED_AT_Label.setText("Updated at:");

        AMOUNT_TextField.setBackground(new java.awt.Color(255, 255, 255));
        AMOUNT_TextField.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        AMOUNT_TextField.setForeground(new java.awt.Color(34, 40, 49));
        AMOUNT_TextField.setText("0.0");

        __AMOUNTLabel.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        __AMOUNTLabel.setForeground(new java.awt.Color(34, 40, 49));
        __AMOUNTLabel.setText("Amount");

        TO_TextField.setBackground(new java.awt.Color(255, 255, 255));
        TO_TextField.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        TO_TextField.setForeground(new java.awt.Color(34, 40, 49));

        __TOLabel.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        __TOLabel.setForeground(new java.awt.Color(34, 40, 49));
        __TOLabel.setText("To (ID)");

        javax.swing.GroupLayout __ACCOUNT_INFOPanelLayout = new javax.swing.GroupLayout(__ACCOUNT_INFOPanel);
        __ACCOUNT_INFOPanel.setLayout(__ACCOUNT_INFOPanelLayout);
        __ACCOUNT_INFOPanelLayout.setHorizontalGroup(
            __ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, __ACCOUNT_INFOPanelLayout.createSequentialGroup()
                .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                                .addComponent(__AMOUNTLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AMOUNT_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                                .addComponent(__TOLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TO_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DEPOSIT_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(WITHDRAW_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TRANSFER_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                        .addContainerGap(45, Short.MAX_VALUE)
                        .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                                .addComponent(__ACCOUNTIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ACCOUNT_ID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                                .addComponent(__BALANCELabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BALANCETextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                                .addComponent(__CREATED_AT_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CREATED_AT_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(100, 100, 100)
                        .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                                .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(__STATUSLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(__CUSTOMERIDLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CUSTOMER_ID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(STATUS_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                                .addComponent(__UPDATED_AT_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UPDATED_AT_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(58, 58, 58))
        );
        __ACCOUNT_INFOPanelLayout.setVerticalGroup(
            __ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(__CUSTOMERIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(__ACCOUNTIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ACCOUNT_ID_TextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CUSTOMER_ID_TextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BALANCETextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(__BALANCELabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(__STATUSLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(STATUS_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(UPDATED_AT_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(__UPDATED_AT_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CREATED_AT_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(__CREATED_AT_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DEPOSIT_Button, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(WITHDRAW_Button, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(TRANSFER_Button, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(__ACCOUNT_INFOPanelLayout.createSequentialGroup()
                        .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AMOUNT_TextField, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(__AMOUNTLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(__ACCOUNT_INFOPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TO_TextField, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(__TOLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        MainWindowPanel.add(__ACCOUNT_INFOPanel);
        __ACCOUNT_INFOPanel.setBounds(0, 100, 800, 180);

        TRANSACTIONTable.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        TRANSACTIONTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Type", "Amount", "Status", "Date", "To", "From"
            }
        ) {
            @SuppressWarnings("rawtypes")
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            @SuppressWarnings({ "rawtypes", "unchecked" })
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TRANSACTIONTable);

        MainWindowPanel.add(jScrollPane2);
        jScrollPane2.setBounds(40, 290, 710, 406);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainWindowPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainWindowPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        if (SEARCHTextField.getText().isEmpty()) { JOptionPane.showMessageDialog(this, "No account selected, pleas search for account!", "Search for account", JOptionPane.ERROR_MESSAGE); return; }
        Account account = null;
        try {
            account = AccountOperation.select(Integer.parseInt(SEARCHTextField.getText()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter account id(intger) not text(string)", "Input error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (account != null && !SEARCHTextField.getText().isEmpty()) {

            // Set account information
            __ACCOUNTIDLabel.setText("Account (" + account.get_id() + "):");
            ACCOUNT_ID_TextField.setText(CustomerOperation.select(account.get_customer_id()).get_name());
            BALANCETextField.setText(String.valueOf(account.get_balance()));
            CREATED_AT_TextField.setText(String.valueOf(account.get_created_date()));
            UPDATED_AT_TextField.setText(String.valueOf(account.get_last_updated_date()));
            CUSTOMER_ID_TextField.setText(String.valueOf(account.get_customer_id()));
            STATUS_TextField.setText(account.get_status());

            // Display all transactions
            DefaultTableModel tableModel = (DefaultTableModel) TRANSACTIONTable.getModel();
            tableModel.setRowCount(0);
            
            try {
                List<Transaction> rs = TransactionOperation.get_all(account.get_id());
                for (Transaction trans : rs) {
                    tableModel.addRow(new Object[] {
                        String.valueOf(trans.get_id()),
                        trans.get_type(),
                        String.valueOf(trans.get_amount()),
                        trans.get_status(),
                        trans.get_transaction_date().toString(),
                        String.valueOf(trans.get_recipient_id()),
                        String.valueOf(trans.get_account_id())
                    });
                }
            } catch (SQLException e) {
                System.out.println("SQL Error: " + e);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Account not found!", "Try agin", JOptionPane.ERROR_MESSAGE);
        }

        
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void DEPOSIT_ButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_DEPOSIT_ButtonActionPerformed
        // TODO add your handling code here:
        if (SEARCHTextField.getText().isEmpty()) { JOptionPane.showMessageDialog(this, "No account selected, pleas search for account!", "Search for account", JOptionPane.ERROR_MESSAGE); return; }
        Account account = null;
        Double amount = 0.0;
        try {
            account = AccountOperation.select(Integer.parseInt(SEARCHTextField.getText()));
            amount = Double.parseDouble(AMOUNT_TextField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter intger not text(string)", "Input error", JOptionPane.ERROR_MESSAGE);
        }

        if (account == null) { JOptionPane.showMessageDialog(this, "There's no account selected!", "Search for account", JOptionPane.WARNING_MESSAGE); return; }

        if (account != null && !SEARCHTextField.getText().isEmpty() && amount > 0.0) {
            account.deposit(amount);
            account.save_changes();
            JOptionPane.showMessageDialog(this, "Deposit added successfully!", "Successfully", JOptionPane.PLAIN_MESSAGE);
            SearchButtonActionPerformed(evt);
        } 
        else {
            JOptionPane.showMessageDialog(this, "Please enter float number!", "Try again", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_DEPOSIT_ButtonActionPerformed

    private void WITHDRAW_ButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_WITHDRAW_ButtonActionPerformed
        // TODO add your handling code here:
        if (SEARCHTextField.getText().isEmpty()) { JOptionPane.showMessageDialog(this, "No account selected, pleas search for account!", "Search for account", JOptionPane.ERROR_MESSAGE); return; }
        Account account = null;
        Double amount = 0.0;
        try {
            account = AccountOperation.select(Integer.parseInt(SEARCHTextField.getText()));
            amount = Double.parseDouble(AMOUNT_TextField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter intger not text(string)", "Input error", JOptionPane.ERROR_MESSAGE);
        }

        if (account == null) { JOptionPane.showMessageDialog(this, "There's no account selected!", "Search for account", JOptionPane.WARNING_MESSAGE); return; }
        if (account.get_balance() < amount) { JOptionPane.showMessageDialog(this, "Cannot withdraw from account!", "Not enough gold", JOptionPane.WARNING_MESSAGE); return; }

        if (account != null && !SEARCHTextField.getText().isEmpty() && amount > 0.0) {
            account.withdraw(amount);
            account.save_changes();
            JOptionPane.showMessageDialog(this, "Withdraw Done Successfully!", "Successfully", JOptionPane.PLAIN_MESSAGE);
            SearchButtonActionPerformed(evt);
        } 
        else {
            JOptionPane.showMessageDialog(this, "Please enter float number!", "Try again", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_WITHDRAW_ButtonActionPerformed

    private void TRANSFER_ButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_TRANSFER_ButtonActionPerformed
        // TODO add your handling code here:
        if (SEARCHTextField.getText().isEmpty() || TO_TextField.getText().isEmpty()) { JOptionPane.showMessageDialog(this, "No account selected!", "Write id of Account", JOptionPane.ERROR_MESSAGE); return; }

        Double amount = null;
        int senderID = 0;
        int recipientID = 0;
        try {
            amount = Double.parseDouble(AMOUNT_TextField.getText());
            senderID = Integer.parseInt(SEARCHTextField.getText());
            recipientID = Integer.parseInt(TO_TextField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter intger not text(string)", "Input error", JOptionPane.ERROR_MESSAGE);
        }



        Account senderAccount = AccountOperation.select(senderID);
        Account recipientAccount = AccountOperation.select(recipientID);

        if (senderAccount == null || recipientAccount == null) { JOptionPane.showMessageDialog(this, "There's no account selected!", "Account not found", JOptionPane.WARNING_MESSAGE); return; }

        if (!SEARCHTextField.getText().isEmpty() && amount > 0.0) {
            senderAccount.transfer(amount, recipientAccount);
            JOptionPane.showMessageDialog(this, "Transfer done Successfully!", "Successfully", JOptionPane.PLAIN_MESSAGE);
            senderAccount.save_changes();
            recipientAccount.save_changes();
            SearchButtonActionPerformed(evt);
        } 
        else {
            JOptionPane.showMessageDialog(this, "Please enter float number!", "Try again", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_TRANSFER_ButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ACCOUNT_ID_TextField;
    private javax.swing.JTextField AMOUNT_TextField;
    private javax.swing.JTextField BALANCETextField;
    private javax.swing.JTextField CREATED_AT_TextField;
    private javax.swing.JTextField CUSTOMER_ID_TextField;
    private javax.swing.JButton DEPOSIT_Button;
    private javax.swing.JPanel MainWindowPanel;
    private javax.swing.JPanel NavPanel;
    private javax.swing.JTextField SEARCHTextField;
    private javax.swing.JTextField STATUS_TextField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField TO_TextField;
    private javax.swing.JTable TRANSACTIONTable;
    private javax.swing.JButton TRANSFER_Button;
    private javax.swing.JTextField UPDATED_AT_TextField;
    private javax.swing.JLabel WELCOMEMESSAGE;
    private javax.swing.JButton WITHDRAW_Button;
    private javax.swing.JLabel __ACCOUNTIDLabel;
    private javax.swing.JPanel __ACCOUNT_INFOPanel;
    private javax.swing.JLabel __AMOUNTLabel;
    private javax.swing.JLabel __BALANCELabel;
    private javax.swing.JLabel __BLOGO;
    private javax.swing.JLabel __CREATED_AT_Label;
    private javax.swing.JLabel __CUSTOMERIDLabel;
    private javax.swing.JPanel __LOGOANDNAME;
    private javax.swing.JLabel __SLASH;
    private javax.swing.JLabel __SLOGO;
    private javax.swing.JLabel __STATUSLabel;
    private javax.swing.JLabel __TOLabel;
    private javax.swing.JLabel __UPDATED_AT_Label;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
